task printProps << {
    println gradlePropertiesProp // gradlePropertiesValue
    println sysProp // shouldBeOverWrittenBySysProp
    println envProjectProp // shouldBeOverWrittenBySysProp
//    In a multi project build, “systemProp.” properties set in any project except the root will be ignored.
// That is, only the root project's gradle.properties file will be checked for properties that begin with the “systemProp.” prefix
    println System.properties['system'] // null
}

task hello << {
    println 'Hello world'
}

task intro(dependsOn: hello) << {
    println "I'm Gradle"
}

task upper << {
    String s = 'mY_da'
    println 'Original:' + s
    println 'Upper case: ' + s.toUpperCase()
}

task count << {
    4.times {println "$it"}
}

task taskX(dependsOn: 'taskY') << {
    println 'taskX'
}

task taskY << {
    println 'taskY'
}

4.times {counter->
    task "task$counter" << {
        println "I'm task number $counter"
    }
}
task0.dependsOn task2, task3

task myTask {
    ext.myProperty = "myValue"
}

task printTaskProperties << {
    println myTask.myProperty
}

task distribution << {
    println "We build the zip with version=$version"
}

task release(dependsOn: 'distribution') << {
    println 'We release now'
}

gradle.taskGraph.whenReady {taskGraph->
    if (taskGraph.hasTask(release)) {
        version = '1.0'
    } else {
        version = '1.0-SNAPSHOT'
    }
}

task printProject << {
    println name // printProject
    println project.name // gradle-setting
    println project.parent // root project 'java'
    println project.path // :gradle-setting
}

apply plugin: "java"

ext {
    springVersion = "3.1.0.RELEASE"
    emailNotification = "build@master.org"
}

sourceSets.all {ext.purpose = null}

sourceSets {
    main {
        purpose = "production"
    }
    test {
        purpose = "test"
    }
    plugin {
        purpose = "production"
    }
}

task printProperties << {
    println springVersion
    println emailNotification
    sourceSets.matching {it.purpose == "production"}.each {println it.name}
}

task configure << {
    def pos = configure(new java.text.FieldPosition(10)) {
        beginIndex = 1
        endIndex = 5
    }
    println pos.beginIndex
    println pos.endIndex
}